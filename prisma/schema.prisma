// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        String   @id @unique
  username  String   @unique
  email     String   @unique
  createdAt DateTime @default(now())

  // Beziehungen
  families  Member[] // Verknüpfungstabelle zu Family
  wishLists WishList[] // Wunschlisten des Benutzers in verschiedenen Familien
}

model Family {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now())
  dueDate   DateTime?

  // Beziehungen
  members   Member[] // Verknüpfungstabelle zu User
  wishLists WishList[] // Wunschlisten der Familienmitglieder
}

model Member {
  id       String   @id @default(uuid())
  userId   String?
  name     String
  familyId String
  joinedAt DateTime @default(now())

  // Beziehungen
  user   User?  @relation(fields: [userId], references: [id])
  family Family @relation(fields: [familyId], references: [id])

  @@unique([userId, familyId]) // Ein Benutzer kann nur einmal pro Familie Mitglied sein
}

model WishList {
  id        Int      @id @default(autoincrement())
  userId    String // Der Besitzer der Wunschliste
  familyId  String // Die Familie, zu der die Wunschliste gehört
  createdAt DateTime @default(now())

  // Beziehungen
  user   User   @relation(fields: [userId], references: [id])
  family Family @relation(fields: [familyId], references: [id])
  wishes Wish[] // Die individuellen Wünsche

  @@unique([userId, familyId]) // Eine Wunschliste pro Benutzer und Familie
}

model Wish {
  id         Int      @id @default(autoincrement())
  wishListId Int // Die zugehörige Wunschliste
  content    String // Der eigentliche Wunschtext
  createdAt  DateTime @default(now())

  // Beziehung
  wishList WishList @relation(fields: [wishListId], references: [id])
}
